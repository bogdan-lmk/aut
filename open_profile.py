#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Simple Profile Browser - –ü—Ä–æ—Å—Ç–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
=================================================

–ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –æ—Ç–∫—Ä—ã—Ç—å –ª—é–±–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ Chromium
–¥–ª—è —Ä—É—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
python open_profile.py 1          # –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å #1
python open_profile.py 5          # –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å #5
python open_profile.py            # –í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º core –≤ –ø—É—Ç—å
current_dir = Path(__file__).parent
sys.path.append(str(current_dir / "core"))

class SimpleProfileBrowser:
    """–ü—Ä–æ—Å—Ç–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
    
    def __init__(self):
        self.playwright = None
        self.browser = None
    
    async def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Playwright"""
        try:
            from playwright.async_api import async_playwright
            
            self.playwright = await async_playwright().start()
            print("‚úÖ Playwright –≥–æ—Ç–æ–≤")
            return True
            
        except ImportError:
            print("‚ùå Playwright –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install playwright")
            print("üí° –ó–∞—Ç–µ–º: playwright install chromium")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
            return False
    
    async def open_profile_browser(self, profile_number: int, url: str = None):
        """–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
        print(f"üöÄ –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è #{profile_number}")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
            if await self._try_persistent_profile(profile_number, url):
                return True
            
            # –ï—Å–ª–∏ –Ω–µ—Ç - –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            return await self._open_temporary_profile(profile_number, url)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            return False
    
    async def _try_persistent_profile(self, profile_number: int, url: str = None):
        """–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"""
        try:
            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
            from persistent_profiles import PersistentProfileManager
            
            profile_manager = PersistentProfileManager()
            profile = profile_manager.get_profile_by_number(profile_number)
            
            if not profile:
                print(f"‚ùå –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å #{profile_number} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return False
            
            print(f"üë§ –ü—Ä–æ—Ñ–∏–ª—å: {profile.name}")
            print(f"üìß Email: {profile.email}")
            print(f"üí∞ –ö–æ—à–µ–ª–µ–∫: {profile.wallet_type}")
            print(f"üåê –ë—Ä–∞—É–∑–µ—Ä: {profile.user_agent.split('Chrome/')[1].split()[0] if 'Chrome/' in profile.user_agent else 'Chrome'}")
            
            # –ü—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª—è
            profile_data_dir = Path("browser_profiles") / profile.id
            profile_data_dir.mkdir(exist_ok=True)
            
            print(f"üìÅ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile_data_dir}")
            print("üîÑ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
            browser = await self.playwright.chromium.launch_persistent_context(
                user_data_dir=str(profile_data_dir),
                headless=False,
                viewport=profile.viewport,
                user_agent=profile.user_agent,
                locale=profile.locale,
                timezone_id=profile.timezone,
                args=[
                    "--disable-blink-features=AutomationControlled",
                    "--no-sandbox",
                    "--disable-setuid-sandbox",
                    "--disable-dev-shm-usage",
                    "--disable-web-security",
                    "--disable-features=VizDisplayCompositor"
                ]
            )
            
            # –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if len(browser.pages) > 0:
                page = browser.pages[0]
            else:
                page = await browser.new_page()
            
            # –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π URL –∏–ª–∏ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            target_url = url or "https://signup.billions.network/"
            print(f"üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {target_url}")
            await page.goto(target_url)
            
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç!")
            print("üîì –ë—Ä–∞—É–∑–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ")
            print("üí° –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–∫—Ä–∏–ø—Ç (–±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–Ω–µ—Ç—Å—è)")
            
            # –ü—Ä–æ—Å—Ç–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞
            try:
                # –ñ–¥–µ–º –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                import concurrent.futures
                loop = asyncio.get_event_loop()
                
                with concurrent.futures.ThreadPoolExecutor() as executor:
                    # –ó–∞–ø—É—Å–∫–∞–µ–º input –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                    input_future = loop.run_in_executor(executor, input, "")
                    
                    # –ñ–¥–µ–º –ª–∏–±–æ –≤–≤–æ–¥–∞, –ª–∏–±–æ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ (—Å —Ç–∞–π–º–∞—É—Ç–æ–º)
                    try:
                        await asyncio.wait_for(input_future, timeout=1.0)
                        print("üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º")
                    except asyncio.TimeoutError:
                        # –¢–∞–π–º–∞—É—Ç - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º
                        print("üöÄ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ")
                        
            except Exception:
                # –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ –¥–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—É –≤—Ä–µ–º—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
                await asyncio.sleep(1)
                print("üöÄ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º")
            
            return True
            
        except ImportError:
            print("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            return False
    
    async def _open_temporary_profile(self, profile_number: int, url: str = None):
        """–û—Ç–∫—Ä—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"""
        try:
            print(f"üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è #{profile_number}")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
            profile_data = self._generate_temp_profile_data(profile_number)
            
            print(f"üë§ –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å: User {profile_number}")
            print(f"üåê User-Agent: {profile_data['user_agent'].split('Chrome/')[1].split()[0] if 'Chrome/' in profile_data['user_agent'] else 'Chrome'}")
            print(f"üì± –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {profile_data['viewport']['width']}x{profile_data['viewport']['height']}")
            
            # –°–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
            temp_profile_dir = Path("browser_profiles") / f"temp_profile_{profile_number:02d}"
            temp_profile_dir.mkdir(exist_ok=True)
            
            print("üîÑ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä
            browser = await self.playwright.chromium.launch_persistent_context(
                user_data_dir=str(temp_profile_dir),
                headless=False,
                viewport=profile_data['viewport'],
                user_agent=profile_data['user_agent'],
                locale=profile_data['locale'],
                timezone_id=profile_data['timezone'],
                args=[
                    "--disable-blink-features=AutomationControlled",
                    "--no-sandbox"
                ]
            )
            
            # –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if len(browser.pages) > 0:
                page = browser.pages[0]
            else:
                page = await browser.new_page()
            
            # –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ URL
            target_url = url or "https://signup.billions.network/"
            print(f"üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {target_url}")
            await page.goto(target_url)
            
            print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç!")
            print("üîì –ë—Ä–∞—É–∑–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ")
            print("üí° –ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–∫—Ä–∏–ø—Ç (–±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–Ω–µ—Ç—Å—è)")
            
            # –ü—Ä–æ—Å—Ç–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
            try:
                import concurrent.futures
                loop = asyncio.get_event_loop()
                
                with concurrent.futures.ThreadPoolExecutor() as executor:
                    input_future = loop.run_in_executor(executor, input, "")
                    
                    try:
                        await asyncio.wait_for(input_future, timeout=1.0)
                        print("üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω, –±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º")
                    except asyncio.TimeoutError:
                        print("üöÄ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ")
                        
            except Exception:
                await asyncio.sleep(1)
                print("üöÄ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            return False
    
    def _generate_temp_profile_data(self, profile_number: int):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        import random
        
        user_agents = [
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
            "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
        ]
        
        viewports = [
            {"width": 1920, "height": 1080},
            {"width": 1440, "height": 900},
            {"width": 1366, "height": 768}
        ]
        
        locales = ["en-US", "en-GB", "en-CA"]
        timezones = ["America/New_York", "America/Los_Angeles", "Europe/London"]
        
        # –î–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è
        random.seed(profile_number)
        
        return {
            'user_agent': user_agents[profile_number % len(user_agents)],
            'viewport': viewports[profile_number % len(viewports)],
            'locale': locales[profile_number % len(locales)],
            'timezone': timezones[profile_number % len(timezones)]
        }
    
    async def cleanup(self):
        """–û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ (–ù–ï –∑–∞–∫—Ä—ã–≤–∞—è –±—Ä–∞—É–∑–µ—Ä—ã)"""
        # –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä—ã - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å
        if self.playwright:
            try:
                # –û—Ç—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –æ—Ç playwright, –Ω–æ –±—Ä–∞—É–∑–µ—Ä—ã –æ—Å—Ç–∞—é—Ç—Å—è
                pass  # –ù–µ –≤—ã–∑—ã–≤–∞–µ–º stop() —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä—ã –Ω–µ –∑–∞–∫—Ä—ã–ª–∏—Å—å
            except:
                pass

class ProfileBrowserCLI:
    """CLI –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    
    def __init__(self):
        self.browser_opener = SimpleProfileBrowser()
    
    async def run(self):
        """–ó–∞–ø—É—Å–∫ CLI"""
        print("üåê Simple Profile Browser")
        print("=" * 30)
        
        if not await self.browser_opener.initialize():
            return
        
        while True:
            try:
                print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
                print("1. üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –Ω–æ–º–µ—Ä—É")
                print("2. üéØ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Å URL")
                print("3. üìã –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏")
                print("4. üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö")
                print("0. üö™ –í—ã—Ö–æ–¥")
                
                choice = input("\n–í—ã–±–æ—Ä (0-4): ").strip()
                
                if choice == "0":
                    break
                elif choice == "1":
                    await self._open_profile_by_number()
                elif choice == "2":
                    await self._open_profile_with_url()
                elif choice == "3":
                    await self._quick_links()
                elif choice == "4":
                    await self._show_profiles_info()
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                    
            except KeyboardInterrupt:
                print("\nüëã –í—ã—Ö–æ–¥...")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        await self.browser_opener.cleanup()
        print("üëã –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("üí° –û—Ç–∫—Ä—ã—Ç—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å")
    
    async def _open_profile_by_number(self):
        """–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –Ω–æ–º–µ—Ä—É"""
        try:
            number = int(input("–ù–æ–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è (1-30): "))
            if 1 <= number <= 30:
                await self.browser_opener.open_profile_browser(number)
            else:
                print("‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 30")
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
    
    async def _open_profile_with_url(self):
        """–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º URL"""
        try:
            number = int(input("–ù–æ–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è (1-30): "))
            if not (1 <= number <= 30):
                print("‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 30")
                return
            
            url = input("URL (Enter –¥–ª—è billions.network): ").strip()
            if not url:
                url = "https://signup.billions.network/"
            
            await self.browser_opener.open_profile_browser(number, url)
            
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
    
    async def _quick_links(self):
        """–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏"""
        quick_links = {
            "1": ("Billions Network", "https://signup.billions.network/"),
            "2": ("Uniswap", "https://app.uniswap.org"),
            "3": ("Aave", "https://app.aave.com"),
            "4": ("Google", "https://google.com"),
            "5": ("Gmail", "https://gmail.com")
        }
        
        print("\nüîó –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏:")
        for key, (name, url) in quick_links.items():
            print(f"{key}. {name} - {url}")
        
        try:
            profile_num = int(input("\n–ù–æ–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è (1-30): "))
            if not (1 <= profile_num <= 30):
                print("‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 30")
                return
            
            link_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Å—ã–ª–∫—É (1-5): ").strip()
            if link_choice in quick_links:
                name, url = quick_links[link_choice]
                print(f"üöÄ –û—Ç–∫—Ä—ã—Ç–∏–µ {name} –≤ –ø—Ä–æ—Ñ–∏–ª–µ #{profile_num}")
                await self.browser_opener.open_profile_browser(profile_num, url)
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Å—Å—ã–ª–∫–∏")
                
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
    
    async def _show_profiles_info(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö"""
        try:
            # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è—Ö
            from persistent_profiles import PersistentProfileManager
            
            profile_manager = PersistentProfileManager()
            profiles = profile_manager.get_available_profiles(10)  # –ü–µ—Ä–≤—ã–µ 10
            
            print("\nüë• –î–û–°–¢–£–ü–ù–´–ï –ü–†–û–§–ò–õ–ò:")
            print("-" * 50)
            
            for profile in profiles:
                status = "üü¢" if profile.is_active else "üî¥"
                print(f"{status} #{profile.number:02d} | {profile.name}")
                print(f"     üìß {profile.email}")
                print(f"     üí∞ {profile.wallet_type}")
                print(f"     üî¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {profile.usage_count}")
                print()
            
            if len(profiles) >= 10:
                print("... –∏ –µ—â–µ –ø—Ä–æ—Ñ–∏–ª–∏")
                
        except ImportError:
            print("\n‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            print("üìã –î–æ—Å—Ç—É–ø–Ω—ã –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ #1-30")
            print("üí° –°–æ–∑–¥–∞–π—Ç–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:")
            print("   python core/persistent_profiles.py test")

# –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async def quick_open(profile_number: int, url: str = None):
    """–ë—ã—Å—Ç—Ä–æ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"""
    browser = SimpleProfileBrowser()
    
    if await browser.initialize():
        await browser.open_profile_browser(profile_number, url)
        await browser.cleanup()
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        try:
            # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–æ–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è
            profile_number = int(sys.argv[1])
            
            if not (1 <= profile_number <= 30):
                print("‚ùå –ù–æ–º–µ—Ä –ø—Ä–æ—Ñ–∏–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 30")
                return
            
            # URL (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            url = sys.argv[2] if len(sys.argv) > 2 else None
            
            print(f"üöÄ –ë—ã—Å—Ç—Ä–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è #{profile_number}")
            if url:
                print(f"üåê URL: {url}")
            
            await quick_open(profile_number, url)
            
        except ValueError:
            print("‚ùå –ü–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–æ–º–µ—Ä–æ–º –ø—Ä–æ—Ñ–∏–ª—è (1-30)")
            print("üí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python open_profile.py 5")
            print("üí° –ò–ª–∏ —Å URL: python open_profile.py 5 https://google.com")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        cli = ProfileBrowserCLI()
        await cli.run()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()