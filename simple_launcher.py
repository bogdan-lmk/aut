#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Simple Launcher - –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º core –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent / "core"))

async def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
    print("üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    try:
        from simple_main import SimpleAutomationSystem
        
        system = SimpleAutomationSystem()
        success = await system.test_basic_functionality()
        
        if success:
            print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
        else:
            print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
            print("pip install -r requirements.txt")
            print("playwright install chromium")
        
        return success
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

async def interactive_mode():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"""
    try:
        from simple_main import SimpleCLI
        
        cli = SimpleCLI()
        await cli.run()
        
    except ImportError:
        print("‚ùå –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–Ω–æ–≤–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    help_text = """
ü§ñ Universal Browser Automation - Simple Launcher

–ö–æ–º–∞–Ω–¥—ã:
  test        - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
  interactive - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
  help        - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  python simple_launcher.py test
  python simple_launcher.py interactive
  python simple_launcher.py

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
  Python 3.8+
  pip install -r requirements.txt
  playwright install chromium
"""
    print(help_text)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ Universal Browser Automation - Simple Launcher")
    print("=" * 50)
    
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()
        
        if command == "test":
            await simple_test()
        elif command == "interactive":
            await interactive_mode()
        elif command == "help":
            show_help()
        else:
            print(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            show_help()
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:\n1. –¢–µ—Å—Ç\n2. –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π\n–í—ã–±–æ—Ä (1/2): ")
        
        if choice == "1":
            await simple_test()
        else:
            await interactive_mode()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
